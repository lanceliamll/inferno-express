import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import { createVNode } from "inferno";
import { createElement } from 'inferno-create-element';
import classNames from 'classnames';
import { mapToCssModules } from '../utils';
var defaultProps = {
  tag: 'h4',
  wrapTag: 'div',
  closeAriaLabel: 'Close'
};

var ModalHeader = function ModalHeader(props) {
  var closeButton;

  var className = props.className,
      cssModule = props.cssModule,
      children = props.children,
      toggle = props.toggle,
      Tag = props.tag,
      WrapTag = props.wrapTag,
      closeAriaLabel = props.closeAriaLabel,
      attributes = _objectWithoutProperties(props, ["className", "cssModule", "children", "toggle", "tag", "wrapTag", "closeAriaLabel"]);

  var classes = mapToCssModules(classNames(className, 'modal-header'), cssModule);

  if (toggle) {
    closeButton = createVNode(1, "button", "close", createVNode(1, "span", null, String.fromCharCode(215), 0, {
      "aria-hidden": "true"
    }), 2, {
      "type": "button",
      "onClick": toggle,
      "aria-label": closeAriaLabel
    });
  }

  var innerChildren = [createElement(Tag, {
    className: mapToCssModules('modal-title', cssModule)
  }, children), closeButton];
  Object.assign(attributes, {
    className: classes
  });
  return createElement(WrapTag, attributes, innerChildren);
};

ModalHeader.defaultProps = defaultProps;
export default ModalHeader;