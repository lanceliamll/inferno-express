import _objectSpread from "@babel/runtime/helpers/objectSpread";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import { createComponentVNode, normalizeProps } from "inferno";
import { createElement } from 'inferno-create-element';
import classNames from 'classnames';
import { mapToCssModules } from '../utils';
import Button from '../Button';
var defaultProps = {
  tag: 'div'
};

var InputGroupButton = function InputGroupButton(props) {
  var className = props.className,
      cssModule = props.cssModule,
      Tag = props.tag,
      addonType = props.addonType,
      children = props.children,
      groupClassName = props.groupClassName,
      groupAttributes = props.groupAttributes,
      attributes = _objectWithoutProperties(props, ["className", "cssModule", "tag", "addonType", "children", "groupClassName", "groupAttributes"]);

  if (typeof children === 'string') {
    var groupClasses = mapToCssModules(classNames(groupClassName, 'input-group-' + addonType), cssModule);
    groupAttributes = groupAttributes || {};
    Object.assign(groupAttributes, {
      className: groupClasses
    });
    return createElement(Tag, groupAttributes, normalizeProps(createComponentVNode(2, Button, _objectSpread({}, attributes, {
      "className": className,
      children: children
    }))));
  }

  var classes = mapToCssModules(classNames(className, 'input-group-' + addonType), cssModule);
  Object.assign(attributes, {
    className: classes
  });
  return createElement(Tag, attributes, children);
};

InputGroupButton.defaultProps = defaultProps;
export default InputGroupButton;