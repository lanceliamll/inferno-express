{"ast":null,"code":"import { createVNode, createTextVNode } from \"inferno\";\nimport { connect } from \"inferno-redux\";\nimport { addTodo, getTodo, editTodo, getTodos, deleteTodo } from \"../actions/todoActions\";\n\nvar IndividualTodo = function IndividualTodo(_ref) {\n  var todos = _ref.todos,\n      deleteTodo = _ref.deleteTodo;\n  return createVNode(1, \"div\", null, createVNode(1, \"ul\", null, [createVNode(1, \"li\", null, [createTextVNode(\" \"), todos.todoName, createTextVNode(\" \")], 0), createVNode(1, \"button\", null, \"Edit\", 16, {\n    \"onClick\": function onClick() {\n      return console.log(todos._id);\n    }\n  }), createVNode(1, \"button\", null, \"Delete\", 16, {\n    \"onClick\": function onClick() {\n      return deleteTodo(todos._id);\n    }\n  })], 4), 2);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    todo: state.todo\n  };\n};\n\nexport default connect(mapStateToProps, {\n  editTodo: editTodo,\n  getTodos: getTodos,\n  deleteTodo: deleteTodo\n})(IndividualTodo);","map":{"version":3,"sources":["/home/lance/Documents/projects/inferno-redux/client/src/components/IndividualTodo.js"],"names":["connect","addTodo","getTodo","editTodo","getTodos","deleteTodo","IndividualTodo","todos","todoName","console","log","_id","mapStateToProps","state","todo"],"mappings":";AAAA,SAASA,OAAT,QAAwB,eAAxB;AACA,SACEC,OADF,EAEEC,OAFF,EAGEC,QAHF,EAIEC,QAJF,EAKEC,UALF,QAMO,wBANP;;AAQA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUF,UAAV,QAAUA,UAAV;AAAA,mHAGXE,KAAK,CAACC,QAHK;AAAA,eAIA;AAAA,aAAMC,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,GAAlB,CAAN;AAAA;AAJA;AAAA,eAKA;AAAA,aAAMN,UAAU,CAACE,KAAK,CAACI,GAAP,CAAhB;AAAA;AALA;AAAA,CAAvB;;AAUA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCC,IAAAA,IAAI,EAAED,KAAK,CAACC;AADoB,GAAL;AAAA,CAA7B;;AAIA,eAAed,OAAO,CACpBY,eADoB,EAEpB;AAAET,EAAAA,QAAQ,EAARA,QAAF;AAAYC,EAAAA,QAAQ,EAARA,QAAZ;AAAsBC,EAAAA,UAAU,EAAVA;AAAtB,CAFoB,CAAP,CAGbC,cAHa,CAAf","sourcesContent":["import { connect } from \"inferno-redux\";\nimport {\n  addTodo,\n  getTodo,\n  editTodo,\n  getTodos,\n  deleteTodo\n} from \"../actions/todoActions\";\n\nconst IndividualTodo = ({ todos, deleteTodo }) => (\n  <div>\n    <ul>\n      <li> {todos.todoName} </li>\n      <button onClick={() => console.log(todos._id)}>Edit</button>\n      <button onClick={() => deleteTodo(todos._id)}>Delete</button>\n    </ul>\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  todo: state.todo\n});\n\nexport default connect(\n  mapStateToProps,\n  { editTodo, getTodos, deleteTodo }\n)(IndividualTodo);\n"]},"metadata":{},"sourceType":"module"}