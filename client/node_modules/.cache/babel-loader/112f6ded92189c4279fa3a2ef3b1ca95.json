{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createVNode } from \"inferno\";\nimport { createElement } from 'inferno-create-element';\nimport classNames from 'classnames';\nimport { mapToCssModules } from '../utils';\nvar defaultProps = {\n  tag: 'h4',\n  wrapTag: 'div',\n  closeAriaLabel: 'Close'\n};\n\nvar ModalHeader = function ModalHeader(props) {\n  var closeButton;\n\n  var className = props.className,\n      cssModule = props.cssModule,\n      children = props.children,\n      toggle = props.toggle,\n      Tag = props.tag,\n      WrapTag = props.wrapTag,\n      closeAriaLabel = props.closeAriaLabel,\n      attributes = _objectWithoutProperties(props, [\"className\", \"cssModule\", \"children\", \"toggle\", \"tag\", \"wrapTag\", \"closeAriaLabel\"]);\n\n  var classes = mapToCssModules(classNames(className, 'modal-header'), cssModule);\n\n  if (toggle) {\n    closeButton = createVNode(1, \"button\", \"close\", createVNode(1, \"span\", null, String.fromCharCode(215), 0, {\n      \"aria-hidden\": \"true\"\n    }), 2, {\n      \"type\": \"button\",\n      \"onClick\": toggle,\n      \"aria-label\": closeAriaLabel\n    });\n  }\n\n  var innerChildren = [createElement(Tag, {\n    className: mapToCssModules('modal-title', cssModule)\n  }, children), closeButton];\n  Object.assign(attributes, {\n    className: classes\n  });\n  return createElement(WrapTag, attributes, innerChildren);\n};\n\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","map":null,"metadata":{},"sourceType":"module"}