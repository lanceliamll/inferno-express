{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport { Component } from 'inferno';\nimport { createElement } from 'inferno-create-element';\n\nvar Manager =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Manager, _Component);\n\n  function Manager(props) {\n    var _this;\n\n    _classCallCheck(this, Manager);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Manager).call(this, props));\n\n    _this._setTargetNode = function (node) {\n      _this._targetNode = node;\n    };\n\n    _this._getTargetNode = function () {\n      return _this._targetNode;\n    };\n\n    return _this;\n  }\n\n  _createClass(Manager, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        popperManager: {\n          setTargetNode: this._setTargetNode,\n          getTargetNode: this._getTargetNode\n        }\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Tag = _this$props.tag,\n          children = _this$props.children,\n          restProps = _objectWithoutProperties(_this$props, [\"tag\", \"children\"]);\n\n      if (Tag !== false) {\n        return createElement(Tag || 'div', restProps, children);\n      } else {\n        return children;\n      }\n    }\n  }]);\n\n  return Manager;\n}(Component);\n\nexport default Manager;","map":null,"metadata":{},"sourceType":"module"}