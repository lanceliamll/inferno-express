{"ast":null,"code":"import _defineProperty from \"/home/lance/Documents/projects/inferno-redux/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/lance/Documents/projects/inferno-redux/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lance/Documents/projects/inferno-redux/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/lance/Documents/projects/inferno-redux/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/lance/Documents/projects/inferno-redux/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/lance/Documents/projects/inferno-redux/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { createVNode, createFragment } from \"inferno\";\nimport { Component, Fragment } from \"inferno\";\nimport { connect } from \"inferno-redux\";\nimport { addTodo, getTodos } from \"../actions/todoActions\";\n\nvar Todo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Todo, _Component);\n\n  function Todo() {\n    var _this;\n\n    _classCallCheck(this, Todo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Todo).call(this));\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n\n      console.log(e.target.value);\n    };\n\n    _this.handleAddTodo = function (e) {\n      var todo = _this.state.todo;\n      var addTodo = _this.props.addTodo;\n      e.preventDefault();\n      console.log(todo);\n    };\n\n    _this.state = {\n      todo: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Todo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getTodos();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var todos = this.props.todo.todos;\n      return createVNode(1, \"div\", null, [createVNode(1, \"h1\", null, \"Todo\", 16), createFragment([createVNode(64, \"input\", null, null, 1, {\n        \"type\": \"text\",\n        \"name\": \"todo\",\n        \"value\": this.state.todo,\n        \"onInput\": this.handleChange\n      }), createVNode(1, \"button\", null, \"Add\", 16, {\n        \"onClick\": this.handleAddTodo\n      })], 4), createFragment(todos.map(function (todo) {\n        return createVNode(1, \"ul\", null, createVNode(1, \"li\", null, todo.todoName, 0), 2, null, todo.id);\n      }), 0)], 4);\n    }\n  }]);\n\n  return Todo;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    todo: state.todo\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getTodos: getTodos,\n  addTodo: addTodo\n})(Todo);","map":{"version":3,"sources":["/home/lance/Documents/projects/inferno-redux/client/src/components/Todo.js"],"names":["Component","Fragment","connect","addTodo","getTodos","Todo","handleChange","e","setState","target","name","value","console","log","handleAddTodo","todo","state","props","preventDefault","todos","map","todoName","id","mapStateToProps"],"mappings":";;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,SAApC;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,wBAAlC;;IAEMC,I;;;;;AACJ,kBAAc;AAAA;;AAAA;;AACZ;;AADY,UAYdC,YAZc,GAYC,UAAAC,CAAC,EAAI;AAClB,YAAKC,QAAL,qBAAiBD,CAAC,CAACE,MAAF,CAASC,IAA1B,EAAiCH,CAAC,CAACE,MAAF,CAASE,KAA1C;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,CAAC,CAACE,MAAF,CAASE,KAArB;AACD,KAfa;;AAAA,UAiBdG,aAjBc,GAiBE,UAAAP,CAAC,EAAI;AAAA,UACXQ,IADW,GACF,MAAKC,KADH,CACXD,IADW;AAAA,UAEXZ,OAFW,GAEC,MAAKc,KAFN,CAEXd,OAFW;AAGnBI,MAAAA,CAAC,CAACW,cAAF;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACD,KAtBa;;AAGZ,UAAKC,KAAL,GAAa;AACXD,MAAAA,IAAI,EAAE;AADK,KAAb;AAHY;AAMb;;;;wCAEmB;AAClB,WAAKE,KAAL,CAAWb,QAAX;AACD;;;6BAcQ;AAAA,UACCe,KADD,GACW,KAAKF,KAAL,CAAWF,IADtB,CACCI,KADD;AAGP;AAAA,gBAKa,MALb;AAAA,gBAMa,MANb;AAAA,iBAOe,KAAKH,KAAL,CAAWD,IAP1B;AAAA,mBAQiB,KAAKT;AARtB;AAAA,mBAUuB,KAAKQ;AAV5B,8BAaOK,KAAK,CAACC,GAAN,CAAU,UAAAL,IAAI;AAAA,qEAENA,IAAI,CAACM,QAFC,eACJN,IAAI,CAACO,EADD;AAAA,OAAd,CAbP;AAqBD;;;;EAjDgBtB,S;;AAoDnB,IAAMuB,eAAe,GAAG,SAAlBA,eAAkB,CAAAP,KAAK;AAAA,SAAK;AAChCD,IAAAA,IAAI,EAAEC,KAAK,CAACD;AADoB,GAAL;AAAA,CAA7B;;AAIA,eAAeb,OAAO,CACpBqB,eADoB,EAEpB;AAAEnB,EAAAA,QAAQ,EAARA,QAAF;AAAYD,EAAAA,OAAO,EAAPA;AAAZ,CAFoB,CAAP,CAGbE,IAHa,CAAf","sourcesContent":["import { Component, Fragment } from \"inferno\";\nimport { connect } from \"inferno-redux\";\nimport { addTodo, getTodos } from \"../actions/todoActions\";\n\nclass Todo extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      todo: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.getTodos();\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n    console.log(e.target.value);\n  };\n\n  handleAddTodo = e => {\n    const { todo } = this.state;\n    const { addTodo } = this.props;\n    e.preventDefault();\n    console.log(todo);\n  };\n\n  render() {\n    const { todos } = this.props.todo;\n\n    return (\n      <div>\n        <h1>Todo</h1>\n        <Fragment>\n          <input\n            type=\"text\"\n            name=\"todo\"\n            value={this.state.todo}\n            onInput={this.handleChange}\n          />\n          <button onClick={this.handleAddTodo}>Add</button>\n        </Fragment>\n        <Fragment>\n          {todos.map(todo => (\n            <ul key={todo.id}>\n              <li>{todo.todoName}</li>\n            </ul>\n          ))}\n        </Fragment>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  todo: state.todo\n});\n\nexport default connect(\n  mapStateToProps,\n  { getTodos, addTodo }\n)(Todo);\n"]},"metadata":{},"sourceType":"module"}