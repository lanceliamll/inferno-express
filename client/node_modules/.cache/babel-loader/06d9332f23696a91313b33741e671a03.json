{"ast":null,"code":"import _regeneratorRuntime from \"/home/lance/Documents/projects/inferno-redux/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lance/Documents/projects/inferno-redux/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { ADD_TODO_ERROR, GET_TODOS, GET_TODO } from \"./types\";\nexport var addTodo = function addTodo(todoData) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatchEvent) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.post(\"http://localhost:5000/api/todos/\", todoData);\n\n              case 3:\n                _context.next = 8;\n                break;\n\n              case 5:\n                _context.prev = 5;\n                _context.t0 = _context[\"catch\"](0);\n                dispatchEvent({\n                  type: ADD_TODO_ERROR\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 5]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getTodo = function getTodo(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatchEvent) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return axios.get(\"http://localhost:5000/api/todos/\".concat(id));\n\n              case 3:\n                res = _context2.sent;\n                dispatchEvent({\n                  type: GET_TODO,\n                  payload: res.data\n                });\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                dispatchEvent({\n                  type: GET_TODO_ERROR\n                });\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 7]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getTodos = function getTodos() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatchEvent) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return axios.get(\"http://localhost:5000/api/todos\");\n\n              case 3:\n                res = _context3.sent;\n                dispatchEvent({\n                  type: GET_TODOS,\n                  payload: res.data\n                });\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                dispatchEvent({\n                  type: GET_TODO_ERROR\n                });\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 7]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var editTodo = function editTodo(id, todoData) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatchEvent) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return axios.put(\"http://localhost:5000/api/todos/edit/\".concat(id), todoData);\n\n              case 3:\n                _context4.next = 8;\n                break;\n\n              case 5:\n                _context4.prev = 5;\n                _context4.t0 = _context4[\"catch\"](0);\n                dispatchEvent({\n                  type: GET_TODO_ERROR\n                });\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 5]]);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var deleteTodo = function deleteTodo(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatchEvent) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return axios.delete(\"http://localhost:5000/api/todos/\".concat(id));\n\n              case 3:\n                _context5.next = 8;\n                break;\n\n              case 5:\n                _context5.prev = 5;\n                _context5.t0 = _context5[\"catch\"](0);\n                dispatchEvent({\n                  type: GET_TODO_ERROR\n                });\n\n              case 8:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 5]]);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/lance/Documents/projects/inferno-redux/client/src/actions/todoActions.js"],"names":["axios","ADD_TODO_ERROR","GET_TODOS","GET_TODO","addTodo","todoData","dispatchEvent","post","type","getTodo","id","get","res","payload","data","GET_TODO_ERROR","getTodos","editTodo","put","deleteTodo","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nimport { ADD_TODO_ERROR, GET_TODOS, GET_TODO } from \"./types\";\n\nexport const addTodo = todoData => async dispatchEvent => {\n  try {\n    await axios.post(\"http://localhost:5000/api/todos/\", todoData);\n  } catch (error) {\n    dispatchEvent({\n      type: ADD_TODO_ERROR\n    });\n  }\n};\n\nexport const getTodo = id => async dispatchEvent => {\n  try {\n    const res = await axios.get(`http://localhost:5000/api/todos/${id}`);\n\n    dispatchEvent({\n      type: GET_TODO,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatchEvent({\n      type: GET_TODO_ERROR\n    });\n  }\n};\n\nexport const getTodos = () => async dispatchEvent => {\n  try {\n    const res = await axios.get(\"http://localhost:5000/api/todos\");\n\n    dispatchEvent({\n      type: GET_TODOS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatchEvent({\n      type: GET_TODO_ERROR\n    });\n  }\n};\n\nexport const editTodo = (id, todoData) => async dispatchEvent => {\n  try {\n    await axios.put(`http://localhost:5000/api/todos/edit/${id}`, todoData);\n  } catch (error) {\n    dispatchEvent({\n      type: GET_TODO_ERROR\n    });\n  }\n};\n\nexport const deleteTodo = id => async dispatchEvent => {\n  try {\n    await axios.delete(`http://localhost:5000/api/todos/${id}`);\n  } catch (error) {\n    dispatchEvent({\n      type: GET_TODO_ERROR\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}