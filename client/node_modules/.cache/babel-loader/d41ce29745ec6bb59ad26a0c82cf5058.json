{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createVNode } from \"inferno\";\nimport { createElement } from 'inferno-create-element';\nimport classNames from 'classnames';\nimport toNumber from 'lodash.tonumber';\nimport { mapToCssModules } from './utils';\nvar defaultProps = {\n  tag: 'div',\n  value: 0,\n  max: 100\n};\n\nvar Progress = function Progress(props) {\n  var children = props.children,\n      className = props.className,\n      barClassName = props.barClassName,\n      cssModule = props.cssModule,\n      value = props.value,\n      max = props.max,\n      animated = props.animated,\n      striped = props.striped,\n      color = props.color,\n      bar = props.bar,\n      multi = props.multi,\n      Tag = props.tag,\n      attributes = _objectWithoutProperties(props, [\"children\", \"className\", \"barClassName\", \"cssModule\", \"value\", \"max\", \"animated\", \"striped\", \"color\", \"bar\", \"multi\", \"tag\"]);\n\n  var percent = toNumber(value) / toNumber(max) * 100;\n  var progressClasses = mapToCssModules(classNames(className, 'progress'), cssModule);\n  var progressBarClasses = mapToCssModules(classNames('progress-bar', bar ? className || barClassName : barClassName, animated ? 'progress-bar-animated' : null, color ? \"bg-\".concat(color) : null, striped || animated ? 'progress-bar-striped' : null), cssModule);\n  var ProgressBar = multi ? children : createVNode(1, \"div\", progressBarClasses, children, 0, {\n    \"style\": {\n      width: \"\".concat(percent, \"%\")\n    },\n    \"role\": \"progressbar\",\n    \"aria-valuenow\": value,\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": max\n  });\n\n  if (bar) {\n    return ProgressBar;\n  }\n\n  Object.assign(attributes, {\n    className: progressClasses\n  });\n  return createElement(Tag, attributes, ProgressBar);\n};\n\nProgress.defaultProps = defaultProps;\nexport default Progress;","map":null,"metadata":{},"sourceType":"module"}