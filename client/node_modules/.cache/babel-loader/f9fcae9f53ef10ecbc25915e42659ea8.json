{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createVNode } from \"inferno\";\nimport classNames from 'classnames';\nimport { createElement } from 'inferno-create-element';\nimport { mapToCssModules } from './utils';\nvar defaultProps = {\n  tag: 'a'\n};\n\nvar PaginationLink = function PaginationLink(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      next = props.next,\n      previous = props.previous,\n      Tag = props.tag,\n      attributes = _objectWithoutProperties(props, [\"className\", \"cssModule\", \"next\", \"previous\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'page-link'), cssModule);\n  var defaultAriaLabel;\n\n  if (previous) {\n    defaultAriaLabel = 'Previous';\n  } else if (next) {\n    defaultAriaLabel = 'Next';\n  }\n\n  var ariaLabel = props['aria-label'] || defaultAriaLabel;\n  var defaultCaret;\n\n  if (previous) {\n    defaultCaret = \"\\xAB\";\n  } else if (next) {\n    defaultCaret = \"\\xBB\";\n  }\n\n  var children = props.children;\n\n  if (previous || next) {\n    children = [createVNode(1, \"span\", null, children || defaultCaret, 0, {\n      \"aria-hidden\": \"true\"\n    }, \"caret\"), createVNode(1, \"span\", \"sr-only\", ariaLabel, 0, null, \"sr\")];\n  }\n\n  Object.assign(attributes, {\n    'aria-label': ariaLabel,\n    className: classes\n  });\n  return createElement(Tag, attributes, children);\n};\n\nPaginationLink.defaultProps = defaultProps;\nexport default PaginationLink;","map":null,"metadata":{},"sourceType":"module"}