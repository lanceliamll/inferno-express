{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { Component } from 'inferno';\nimport { createElement } from 'inferno-create-element';\n\nvar Target = function Target(props, context) {\n  var _props$component = props.component,\n      component = _props$component === void 0 ? 'div' : _props$component,\n      innerRef = props.innerRef,\n      children = props.children,\n      restProps = _objectWithoutProperties(props, [\"component\", \"innerRef\", \"children\"]);\n\n  var popperManager = context.popperManager;\n\n  var targetRef = function targetRef(node) {\n    popperManager.setTargetNode(node);\n\n    if (typeof innerRef === 'function') {\n      innerRef(node);\n    }\n  };\n\n  if (typeof children === 'function') {\n    var targetProps = {\n      ref: targetRef\n    };\n    return children({\n      targetProps: targetProps,\n      restProps: restProps\n    });\n  }\n\n  var componentProps = _objectSpread({}, restProps);\n\n  if (typeof component === 'string') {\n    componentProps.ref = targetRef;\n  } else {\n    componentProps.innerRef = targetRef;\n  }\n\n  return createElement(component, componentProps, children);\n};\n\nexport default Target;","map":null,"metadata":{},"sourceType":"module"}