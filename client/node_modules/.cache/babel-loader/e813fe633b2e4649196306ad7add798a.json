{"ast":null,"code":"import _regeneratorRuntime from \"/home/lance/Documents/projects/inferno-redux/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lance/Documents/projects/inferno-redux/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { ADD_TODO, ADD_TODO_ERROR } from \"./types\";\nexport var addTodo = function addTodo(todoData) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatchEvent) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get(\"http://localhost:5000/api/todos\", todoData);\n\n              case 3:\n                res = _context.sent;\n                dispatchEvent({\n                  type: ADD_TODO,\n                  payload: res.data\n                });\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                dispatchEvent({\n                  type: ADD_TODO_ERROR\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/lance/Documents/projects/inferno-redux/client/src/actions/todoActions.js"],"names":["axios","ADD_TODO","ADD_TODO_ERROR","addTodo","todoData","dispatchEvent","get","res","type","payload","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,SAAzC;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,iBAAMC,aAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEbL,KAAK,CAACM,GAAN,CAAU,iCAAV,EAA6CF,QAA7C,CAFa;;AAAA;AAEzBG,gBAAAA,GAFyB;AAI/BF,gBAAAA,aAAa,CAAC;AACZG,kBAAAA,IAAI,EAAEP,QADM;AAEZQ,kBAAAA,OAAO,EAAEF,GAAG,CAACG;AAFD,iBAAD,CAAb;AAJ+B;AAAA;;AAAA;AAAA;AAAA;AAS/BL,gBAAAA,aAAa,CAAC;AACZG,kBAAAA,IAAI,EAAEN;AADM,iBAAD,CAAb;;AAT+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB","sourcesContent":["import axios from \"axios\";\n\nimport { ADD_TODO, ADD_TODO_ERROR } from \"./types\";\n\nexport const addTodo = todoData => async dispatchEvent => {\n  try {\n    const res = await axios.get(\"http://localhost:5000/api/todos\", todoData);\n\n    dispatchEvent({\n      type: ADD_TODO,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatchEvent({\n      type: ADD_TODO_ERROR\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}